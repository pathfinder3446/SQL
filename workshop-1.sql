--1
SELECT Name, Composer 
FROM tracks;

--2
SELECT *
FROM tracks;

/* WRITE A QUERY THAT RETURNS THE NAME OF COMPOSERS OF EACH 
TRACK*/

SELECT name,Composer
FROM tracks;

/* WRITE A QUERY THAT RETURNS UNIQUE ALBUMID, MEDIATYPEID FROM 
TRACKS TABLE*/

SELECT DISTINCT AlbumId, MediaTypeId
FROM tracks;

/* WRITE A QUERY THAT RETURNS TRACK NAME AND TRACKID OF ‘Jorge 
Ben’*/

SELECT name, TrackId
FROM tracks
WHERE Composer like 'Jorge Ben';

/*WRITE A QUERY THAT RETURNS ALL INFO OF THE INVOICES OF WHICH 
TOTAL AMOUNT IS GREATER THAN $25*/

SELECT *
FROM invoices
WHERE total > 25;

/* WRITE A QUERY THAT RETURNS ALL INFO OF THE INVOICES OF WHICH 
TOTAL AMOUNT IS LESS THAN $15. JUST RETURN 5 ROWS */

SELECT *
FROM invoices
WHERE total < 15
LIMIT 5;

/*WRITE A QUERY THAT RETURNS ALL INFO OF THE INVOICES OF WHICH 
TOTAL AMOUNT IS GREATER THAN $10. THEN SORT THE TOTAL AMOUNTS 
IN DESCENDING ORDER, LASTLY DISPLAY TOP 2 ROWS */

SELECT *
FROM invoices
WHERE total > 10
ORDER BY total DESC
LIMIT 2;

/* WRITE A QUERY THAT RETURNS ALL INFO OF THE INVOICES OF WHICH 
BILLING COUNTRY IS NOT CANADA. THEN SORT THE TOTAL AMOUNTS IN 
ASCENDING ORDER, LASTLY DISPLAY TOP 10 ROWS */

SELECT *
FROM invoices
WHERE BillingCountry <> 'Canada'
ORDER BY total ASC
LIMIT 10;

/* WRITE A QUERY THAT RETURNS INVOICEID, CUSTOMERID AND TOTAL 
DOLLAR AMOUNT FOR EACH INVOICE. THEN SORT THEM FIRST BY 
CUSTOMERID IN ASCENDING, THEN TOTAL DOLLAR AMOUNT IN 
DESCENDING ORDER.*/

SELECT InvoiceId, CustomerId, total
FROM invoices
ORDER BY CustomerId ASC, total DESC;

/*WRITE A QUERY THAT RETURNS ALL TRACK NAMES THAT START WITH ‘B’ 
AND END WITH ‘S’*/

SELECT name
FROM tracks
WHERE name like 'B%S';

/*WRITE A QUERY THAT RETURNS THE NEWEST DATE AMONG THE INVOICE 
DATES BETWEEN 2008 AND 2011*/

SELECT max(InvoiceDate)
FROM invoices
WHERE InvoiceDate BETWEEN 2008 AND 2011;

/*WRITE A QUERY THAT RETURNS THE FIRST AND LAST NAME OF THE 
CUSTOMERS WHO HAVE ORDERS FROM NORWAY AND BELGIUM */

SELECT FirstName, LastName
FROM customers
WHERE country like 'Norway' or country like 'Belgium';
--WHERE country='Norway' or country='Belgium'

/* WRITE A QUERY THAT RETURNS THE TRACK NAMES OF ‘ZAPPA’*/

SELECT name
FROM tracks
WHERE Composer like '%Zappa';

/*HOW MANY TRACKS AND INVOICES ARE THERE IN THE DIGITAL MUSIC 
STORE, DISPLAY SEPERATELY*/

SELECT count(*) as tracks_number
FROM tracks;

SELECT count(*) as invoices_number
FROM invoices;

/*HOW MANY COMPOSERS ARE THERE IN THE DIGITAL MUSIC STORE*/

SELECT count(Composer) as composer_number
FROM tracks;

/*HOW MANY TRACKS DOES EACH ALBUM HAVE, DISPLAY ALBUMID AND 
NUMBER OF TRACKS SORTED FROM HIGHEST TO LOWEST */

SELECT AlbumId, count(name) 
FROM tracks
GROUP BY AlbumId; 

/* WRITE A QUERY THAT RETURNS TRACK NAME HAVING THE MINIMUM AND 
MAXIMUM DURATION, DISPLAY SEPERATELY*/

SELECT name, min(Milliseconds) as min_duration_track
FROM tracks;

SELECT name, max(Milliseconds) as max_duration_track
FROM tracks;

/*WRITE A QUERY THAT RETURNS THE TRACKS HAVING DURATION LESS 
THAN THE AVERAGE DURATION*/
SELECT avg(milliseconds) as avg_duration
FROM tracks;

SELECT name, Milliseconds
FROM tracks
WHERE Milliseconds < (SELECT avg(milliseconds) as avg_duration FROM tracks);

/*WRITE A QUERY THAT RETURNS THE TOTAL NUMBER OF EACH 
COMPOSER’s TRACK.*/

SELECT Composer, count(name) as track_number
FROM tracks
GROUP BY Composer
ORDER BY track_number DESC;

/*WRITE A QUERY THAT RETURNS THE GENRE OF EACH TRACK.*/
SELECT name, GenreId
FROM tracks

/*WRITE A QUERY THAT RETURNS THE ARTIST’s ALBUM INFO.*/


/*WRITE A QUERY THAT RETURNS THE MINIMUM DURATION OF THE TRACK 
IN EACH ALBUM. DISPLAY ALBUMID, ALBUM TITLE AND DURATION OF THE 
TRACK. THEN SORT THEM FROM HIGHEST TO LOWEST*/
SELECT AlbumId, Title, Milliseconds, min(Milliseconds)
FROM tracks, albums
GROUP BY AlbumId
ORDER BY Milliseconds DESC;


